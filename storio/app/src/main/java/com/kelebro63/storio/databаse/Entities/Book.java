package com.kelebro63.storio.databаse.Entities;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

import com.kelebro63.storio.databаse.tables.BooksTable;
import com.pushtorefresh.storio.sqlite.annotations.StorIOSQLiteColumn;
import com.pushtorefresh.storio.sqlite.annotations.StorIOSQLiteType;

/**
 * Created by Bistrov Alexey on 24.03.2016.
 */
@StorIOSQLiteType(table = BooksTable.TABLE)
public class Book {
    /**
     * If object was not inserted into db, id will be null
     */
    @Nullable
    @StorIOSQLiteColumn(name = BooksTable.COLUMN_ID, key = true)
    Long id;

    @NonNull
    @StorIOSQLiteColumn(name = BooksTable.COLUMN_AUTHOR)
    String author;

    @NonNull
    @StorIOSQLiteColumn(name = BooksTable.COLUMN_NAME)
    String content;

    // leave default constructor for AutoGenerated code!
    Book() {
    }

    private Book(@Nullable Long id, @NonNull String author, @NonNull String content) {
        this.id = id;
        this.author = author;
        this.content = content;
    }

    @NonNull
    public static Book newTweet(@Nullable Long id, @NonNull String author, @NonNull String content) {
        return new Book(id, author, content);
    }

    @NonNull
    public static Book newTweet(@NonNull String author, @NonNull String content) {
        return new Book(null, author, content);
    }

    @Nullable
    public Long id() {
        return id;
    }

    @NonNull
    public String author() {
        return author;
    }

    @NonNull
    public String content() {
        return content;
    }

    // BTW, you can use AutoValue/AutoParcel to get immutability and code generation for free
    // Check our tests, we have examples!
    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Book tweet = (Book) o;

        if (id != null ? !id.equals(tweet.id) : tweet.id != null) return false;
        if (!author.equals(tweet.author)) return false;
        return content.equals(tweet.content);
    }

    @Override
    public int hashCode() {
        int result = id != null ? id.hashCode() : 0;
        result = 31 * result + author.hashCode();
        result = 31 * result + content.hashCode();
        return result;
    }

    @Override
    public String toString() {
        return "Tweet{" +
                "id=" + id +
                ", author='" + author + '\'' +
                ", name='" + content + '\'' +
                '}';
    }
}
